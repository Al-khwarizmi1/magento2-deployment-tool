<?xml version="1.0" encoding="UTF-8"?>

<project name="Database" basedir=".">

    <target name="magento:generate:files"
            hidden="true">
        <if>
            <istrue value="${magento.generate.files}"/>
            <then>
                <executeTarget target="magento:module:disable"/>
                <executeTarget target="magento:di:compile"/>
                <executeTarget target="magento:static-content:deploy"/>
            </then>
            <else>
                <echo message="Magento generation files skipped."/>
            </else>
        </if>
    </target>

    <target name="magento:module:disable"
            hidden="true">

        <if>
            <equals arg1="${module.disable.list}" arg2="" />
            <then>
                <echo message="No modules to disable"/>
            </then>
            <else>
                <property name="command.magento.module.disable" value="${bin.n98-magerun2} --root-dir=${release.target}/${magento.dir} module:disable ${module.disable.list}"/>
                <echo message="${command.magento.module.disable}"/>
                <exec command="${command.magento.module.disable}" outputProperty="command.magento.module.disable.output" checkreturn="false" logoutput="false"/>

                <phingcall target="util:check:output">
                    <property name="check.output" value="${command.magento.module.disable.output}" override="true"/>
                </phingcall>
            </else>
        </if>

    </target>

    <target name="magento:di:compile"
            hidden="true">

        <property name="command.magento.compile" value="${bin.n98-magerun2} --root-dir=${release.target}/${magento.dir} setup:di:compile"/>
        <echo message="${command.magento.compile}"/>
        <exec command="${command.magento.compile}" outputProperty="command.magento.compile.output" checkreturn="false" logoutput="false"/>

        <phingcall target="util:check:output">
            <property name="check.output" value="${command.magento.compile.output}" override="true"/>
        </phingcall>
    </target>

    <target name="magento:static-content:deploy"
            description="Deploys static asset files"
            hidden="true"
            unless="skipStaticContentDeploy"
            logskipped="true">

        <property name="command.magento.static-content"
                  value="${bin.n98-magerun2} --root-dir=${release.target}/${magento.dir} setup:static-content:deploy ${static-content.languages} ${command.static-content.deploy.options}"/>
        <echo message="${command.magento.static-content}"/>
        <exec command="${command.magento.static-content}" outputProperty="command.magento.static-content.output" checkreturn="false" logoutput="false"/>

        <phingcall target="util:check:output">
            <property name="check.output" value="${command.magento.static-content.output}" override="true"/>
        </phingcall>
    </target>

    <target name="magento:set:permissions"
            unless="skipSetPermissions"
            hidden="true"
            logskipped="true">

        <property name="command.set.permissions" value="cd ${release.target}/${magento.dir} &amp;&amp; ${command.permissions}"/>
        <echo message="${command.set.permissions}"/>
        <exec command="${command.set.permissions}" checkreturn="true" logoutput="true"/>
    </target>

    <target name="magento:setup:db:status"
            hidden="true">

        <property name="command.magento.db.status" value="${bin.n98-magerun2} --root-dir=${release.target}/${magento.dir} setup:db:status"/>
        <echo message="${command.magento.db.status}"/>
        <exec command="${command.magento.db.status}" returnProperty="magento.db.status.return" checkreturn="false" logoutput="true"/>
        <if>
            <equals arg1="${magento.db.status.return}" arg2="2"/>
            <then>
                <property name="magento.setup.upgrade.needed" value="true"/>
            </then>
            <elseif>
                <equals arg1="${magento.db.status.return}" arg2="0"/>
                <then>
                    <property name="magento.setup.upgrade.needed" value="false"/>
                </then>
            </elseif>
            <else>
                <fail message="Error checking if executing setup:upgrade is needed" />
            </else>
        </if>
    </target>

    <target name="magento:setup:upgrade"
            hidden="true">

        <property name="command.magento.upgrade" value="${bin.n98-magerun2} --root-dir=${release.target}/${magento.dir} setup:upgrade --keep-generated"/>
        <echo message="${command.magento.upgrade}"/>
        <exec command="${command.magento.upgrade}" outputProperty="command.magento.upgrade.output" checkreturn="false" logoutput="false"/>

        <phingcall target="util:check:output">
            <property name="check.output" value="${command.magento.upgrade.output}" override="true"/>
        </phingcall>
    </target>

    <target name="magento:cron:install"
            hidden="true"
            unless="skipCronInstall"
            logskipped="true">

        <property name="command.magento.cron" value="${bin.n98-magerun2} --root-dir=${release.target}/${magento.dir} cron:install --force"/>
        <echo message="${command.magento.cron}"/>
        <exec command="${command.magento.cron}" checkreturn="true" logoutput="true"/>
    </target>

</project>