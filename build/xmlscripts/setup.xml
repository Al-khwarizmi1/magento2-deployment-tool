<?xml version="1.0" encoding="UTF-8"?>

<project name="Setup">

    <includepath classpath="${phing.dir}/build/phpscripts/Setup"/>
    <taskdef name="setProjectProperties" classname="ProjectPropertiesTask"/>

    <target name="setup:validate:before"
            hidden="true">
        <fail if="setup.done" message="Setup was already done. Please remove everything and try again."/>

        <echo message="ATTENTION:" level="warning"/>
        <echo message="This command overwrites the database selected for installation." level="warning"/>
        <echo message="If you have data in it, create a backup to restore it after the setup process." level="warning"/>

        <input message="Do you want to continue?" propertyName="setup.validate.continue" validArgs="y,n"/>
        <if>
            <equals arg1="${setup.validate.continue}" arg2="n"/>
            <then>
                <fail message="Setup installation aborted."/>
            </then>
        </if>
    </target>

    <target name="setup:project:properties"
            hidden="true">
        <setProjectProperties/>
    </target>

    <target name="setup:folder:structure"
            hidden="true">
        <mkdir dir="${application.startdir}/${releases.dir}"/>
        <mkdir dir="${application.startdir}/${backup.dir}"/>
        <mkdir dir="${application.startdir}/${static.dir}"/>

        <mkdir dir="${application.startdir}/deployment-settings"/>
        <copy todir="${application.startdir}/deployment-settings/scripts" haltonerror="true">
            <fileset dir="${phing.dir}/settings/scripts">
                <include name="**"/>
            </fileset>
        </copy>

        <copy file="${phing.dir}/settings/templates/maintenance.php"
              tofile="${application.startdir}/deployment-settings/templates/maintenance/${magento.dir}/pub/index.php"
              haltonerror="true"/>
        <symlink target="${application.startdir}/${maintenance.page}" link="${application.startdir}/${live.symlink}" overwrite="true"/>
    </target>

    <target name="setup:install:magento"
            depends= "setup:install:params,
            release:get:project,
            release:build:project"
            hidden="true">
        <property name="setup.magento.dir" value="${release.target}/${magento.dir}" />

        <property name="command.setup.install" value="${bin.n98-magerun2} install
        --installationFolder=${setup.magento.dir}
        --noDownload
        --forceUseDb=true
        --installSampleData=no
        --useDefaultConfigParams=no
        --replaceHtaccessFile=n"
        />
        <echo message="${command.setup.install}" />
        <exec command="${command.setup.install}" checkreturn="true" passthru="true"/>

    </target>

    <target name="setup:mode:production"
            hidden="true">
        <property name="command.setup.mode.prd" value="${bin.n98-magerun2} --root-dir=${setup.magento.dir} deploy:mode:set production"/>
        <echo message="${command.setup.mode.prd}"/>
        <exec command="${command.setup.mode.prd}" outputProperty="command.setup.mode.prd.output" checkreturn="false" logoutput="false"/>
        <phingcall target="util:check:output">
            <property name="check.output" value="${command.setup.mode.prd.output}" override="true"/>
        </phingcall>
    </target>
    
    <target name="setup:install:params"
            hidden="true">
        <property name="release.version" value="master"/>
        <property name="release.overwrite" value="y"/>
    </target>

    <target name="setup:static:data"
            hidden="true">
        <mkdir dir="${application.startdir}/${static.dir}/magento"/>

        <echo message="move ${setup.magento.dir}/app/etc/env.php to ${application.startdir}/${static.dir}/magento/app/etc/env.php"/>
        <move file="${setup.magento.dir}/app/etc/env.php"
              tofile="${application.startdir}/${static.dir}/magento/app/etc/env.php"
              haltonerror="true"/>

        <echo message="move ${setup.magento.dir}/pub/media to ${application.startdir}/${static.dir}/magento/pub/media"/>
        <move file="${setup.magento.dir}/pub/media"
              todir="${application.startdir}/${static.dir}/magento/pub/media"
              haltonerror="true"/>

        <echo message="move ${setup.magento.dir}/var/log to ${application.startdir}/${static.dir}/magento/var/log"/>
        <move file="${setup.magento.dir}/var/log"
              todir="${application.startdir}/${static.dir}/magento/var/log"
              haltonerror="true"/>
    </target>

</project>
