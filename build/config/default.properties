# -------------------------------------------------------------------------------
# Server Directories
# -------------------------------------------------------------------------------
live.symlink=public_html
releases.dir=releases
shared.dir=shared
backup.dir=backups
downloads.dir=tmp-downloads

# -------------------------------------------------------------------------------
# Binary tools
# -------------------------------------------------------------------------------
bin.n98-magerun2=${phing.dir}/../../n98/magerun2/bin/n98-magerun2
bin.symlinker-pro=${phing.dir}/../symlinker-pro/bin/symlinker-pro

#------------------------------------------------------------------------------------------
# Magento
#------------------------------------------------------------------------------------------
# Mageto installation dir (relative path from project root)
magento.dir=magento

# Space-separated list of language codes
static-content.languages=en_US

# Space-separated list of modules to disable during release
module.disable.list=

# Options for command setup:static-content:deploy
command.static-content.deploy.options=

command.permissions=find var vendor pub/static pub/media app/etc -type f -exec chmod g+w {} \; && find var vendor pub/static pub/media app/etc -type d -exec chmod g+w {} \; && chmod u+x bin/magento

magento.generate.files=1

# -------------------------------------------------------------------------------
# Deployment Settings
# -------------------------------------------------------------------------------
build.project.type=default

command.get.project=git clone --depth 1 --branch ${release.version} ${git.repo.url} ${downloads.target}
command.build.project=mv ${downloads.target} ${release.target} && cd ${release.target} && composer install --no-dev --prefer-dist --optimize-autoloader

command.get.project.artifact=
command.build.project.artifact=mkdir -p ${release.target} && tar -xzf ${downloads.target}.tar.gz -C ${release.target}

# -------------------------------------------------------------------------------
# Maintenance Page
# -------------------------------------------------------------------------------
maintenance.page=deployment-settings/templates/maintenance
maintenance.set.command=cd ${application.startdir} && unlink ${live.symlink} && ln -sf ${maintenance.page} ${live.symlink}

# -------------------------------------------------------------------------------
# Custom Scripts
# -------------------------------------------------------------------------------
scripts.release.after=deployment-settings/scripts/release-after.sh

# -------------------------------------------------------------------------------
# Release History
# -------------------------------------------------------------------------------
# (0 = keeps all releases)
releases.keep=3

# (0 = keeps all backups)
backup.keep=3

# -------------------------------------------------------------------------------
# OpCache
# -------------------------------------------------------------------------------
opcache.enabled=1
bin.cachetool=cachetool
param.opcache.fcgi=/var/run/`whoami`.sock
param.opcache.tmp.dir=/home/`whoami`/tmp/
command.opcache.restart=${bin.cachetool} opcache:reset --fcgi=${param.opcache.fcgi} --tmp-dir=${param.opcache.tmp.dir}

# -------------------------------------------------------------------------------
# Varnish
# -------------------------------------------------------------------------------
varnish.enabled=0
command.varnish.restart=sudo /etc/init.d/varnish restart


